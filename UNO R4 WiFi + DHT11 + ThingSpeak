#include <WiFiS3.h>
#include <ThingSpeak.h>
#include <DHT.h>

// ---------- WiFi Credentials ----------
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

// ---------- ThingSpeak Settings ----------
unsigned long channelID = YOUR_CHANNEL_ID;  // e.g. 1234567
const char* writeAPIKey = "YOUR_WRITE_API_KEY";

// ---------- DHT11 Setup ----------
#define DHT_PIN 2
#define DHT_TYPE DHT11
DHT dht(DHT_PIN, DHT_TYPE);

// ---------- WiFi & Client ----------
WiFiClient client;
int status = WL_IDLE_STATUS;
const int MAX_WIFI_ATTEMPTS = 10;

void setup() {
  Serial.begin(9600);
  while (!Serial);

  Serial.println("\n--- Arduino UNO R4 WiFi: DHT11 + ThingSpeak ---");

  // Initialize DHT sensor
  dht.begin();
  Serial.println("DHT11 sensor initialized.");

  // Connect to WiFi
  connectToWiFi();

  // Initialize ThingSpeak
  ThingSpeak.begin(client);

  Serial.println("Setup complete. Starting data transmission...");
}

void loop() {
  // Auto-reconnect WiFi if disconnected
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("WiFi disconnected! Attempting to reconnect...");
    connectToWiFi();
  }

  // Read temperature & humidity
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Validate readings
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println(" Failed to read from DHT11 sensor!");
    delay(5000);
    return;
  }

  // Print readings
  Serial.print("ðŸŒ¡ Temperature: ");
  Serial.print(temperature);
  Serial.print(" Â°C | Humidity: ");
  Serial.print(humidity);
  Serial.println(" %");

  // Send data to ThingSpeak
  ThingSpeak.setField(1, temperature);
  ThingSpeak.setField(2, humidity);

  int httpCode = ThingSpeak.writeFields(channelID, writeAPIKey);

  if (httpCode == 200) {
    Serial.println("Data sent to ThingSpeak successfully!");
  } else {
    Serial.print(" Error pushing data. HTTP code: ");
    Serial.println(httpCode);
  }

  // ThingSpeak minimum update interval: 15 seconds
  delay(20000);
}

void connectToWiFi() {
  Serial.print("Connecting to WiFi: ");
  Serial.println(ssid);

  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < MAX_WIFI_ATTEMPTS) {
    status = WiFi.begin(ssid, password);
    delay(3000);
    Serial.print(".");
    attempts++;
  }

  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\n WiFi connected!");
    Serial.print(" SSID: ");
    Serial.println(WiFi.SSID());
    Serial.print("IP Address: ");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println("\n Failed to connect after multiple attempts.");
  }
}
