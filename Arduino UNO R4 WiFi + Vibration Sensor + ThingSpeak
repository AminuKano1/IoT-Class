#include <WiFiS3.h>
#include <ThingSpeak.h>

// ---------- WiFi Credentials ----------
const char* ssid = "YOUR_SSID";
const char* password = "YOUR_PASSWORD";

// ---------- ThingSpeak Settings ----------
unsigned long myChannelNumber = YOUR_CHANNEL_ID;   // e.g., 1234567
const char* myWriteAPIKey = "YOUR_WRITE_API_KEY";

// ---------- Vibration Sensor Pin ----------
const int vibrationPin = 2;   // Connect vibration sensor OUT pin to digital pin 2
int vibrationValue = 0;

// ---------- WiFi & ThingSpeak Client ----------
WiFiClient client;
int status = WL_IDLE_STATUS;
const int MAX_WIFI_ATTEMPTS = 10;

void setup() {
  Serial.begin(115200);
  while (!Serial);

  Serial.println("\n--- Arduino UNO R4 WiFi: Vibration Sensor + ThingSpeak ---");

  pinMode(vibrationPin, INPUT);

  // Connect to WiFi
  connectToWiFi();

  // Initialize ThingSpeak
  ThingSpeak.begin(client);

  Serial.println("Setup complete. Monitoring vibration...");
}

void loop() {
  // Auto-reconnect WiFi if disconnected
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println(" WiFi disconnected! Attempting reconnect...");
    connectToWiFi();
  }

  // Read vibration sensor value
  vibrationValue = digitalRead(vibrationPin);

  // Display reading on Serial Monitor
  if (vibrationValue == HIGH) {
    Serial.println(" Vibration detected!");
  } else {
    Serial.println(" No vibration detected");
  }

  // Send data to ThingSpeak
  int httpCode = ThingSpeak.writeField(myChannelNumber, 1, vibrationValue, myWriteAPIKey);

  if (httpCode == 200) {
    Serial.println(" Data sent to ThingSpeak successfully!");
  } else {
    Serial.print(" Error sending data. HTTP code: ");
    Serial.println(httpCode);
  }

  // Wait before sending next data (ThingSpeak minimum interval: 15 seconds)
  delay(20000);
}

void connectToWiFi() {
  Serial.print("Connecting to WiFi: ");
  Serial.println(ssid);

  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < MAX_WIFI_ATTEMPTS) {
    status = WiFi.begin(ssid, password);
    delay(3000);
    Serial.print(".");
    attempts++;
  }

  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\n WiFi connected!");
    Serial.print(" SSID: ");
    Serial.println(WiFi.SSID());
    Serial.print(" IP: ");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println("\n Failed to connect to WiFi. Will retry in loop...");
  }
}
